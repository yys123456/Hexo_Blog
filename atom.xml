<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yys_c</title>
  
  
  <link href="/yys123456.github.io/atom.xml" rel="self"/>
  
  <link href="https://yys123456.github.io/"/>
  <updated>2019-07-12T14:46:28.027Z</updated>
  <id>https://yys123456.github.io/</id>
  
  <author>
    <name>yu yan song</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PAT 1024</title>
    <link href="https://yys123456.github.io/2019/07/12/2019-07-12-PAT-1024/"/>
    <id>https://yys123456.github.io/2019/07/12/2019-07-12-PAT-1024/</id>
    <published>2019-07-11T16:00:00.000Z</published>
    <updated>2019-07-12T14:46:28.027Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="keyword">char</span> c1;</span><br><span class="line"><span class="keyword">char</span> c=s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;s.length();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'+'</span>||s[i]==<span class="string">'-'</span>)&#123;</span><br><span class="line">c1=s[i];</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">while</span>(i&lt;s.length())&#123;</span><br><span class="line">p=p*<span class="number">10</span>+s[i]-<span class="string">'0'</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len=s.length();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;len;i++)&#123;</span><br><span class="line">s[i<span class="number">-1</span>]=s[i];</span><br><span class="line">&#125;</span><br><span class="line">len--;</span><br><span class="line"><span class="built_in">string</span> s1=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i]!=<span class="string">'E'</span>;i++)&#123;</span><br><span class="line">s1+=s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c1==<span class="string">'+'</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(p+<span class="number">2</span>&gt;s1.length())s1+=<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">if</span>(p+<span class="number">2</span>&lt;s1.length())s1.insert(p+<span class="number">2</span>,<span class="string">"."</span>);</span><br><span class="line"><span class="keyword">if</span>(s1[<span class="number">0</span>]==<span class="string">'+'</span>)</span><br><span class="line">s1.erase(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">string</span> s2=<span class="string">"."</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;p;i++)&#123;</span><br><span class="line">s2+=<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s2=<span class="string">'0'</span>+s2;</span><br><span class="line"></span><br><span class="line">s1.insert(<span class="number">1</span>,s2);</span><br><span class="line"><span class="keyword">if</span>(s1[<span class="number">0</span>]==<span class="string">'+'</span>)</span><br><span class="line">s1.erase(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="-PAT" scheme="https://yys123456.github.io/categories/PAT/"/>
    
    
      <category term="-PAT" scheme="https://yys123456.github.io/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>123</title>
    <link href="https://yys123456.github.io/2019/07/10/%E9%A1%BA%E5%BA%8F%E8%A1%A8/"/>
    <id>https://yys123456.github.io/2019/07/10/顺序表/</id>
    <published>2019-07-10T05:25:10.000Z</published>
    <updated>2019-07-10T12:44:28.148Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="-123" scheme="https://yys123456.github.io/categories/123/"/>
    
    
      <category term="-123" scheme="https://yys123456.github.io/tags/123/"/>
    
  </entry>
  
</feed>
